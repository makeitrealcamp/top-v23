import Head from 'next/head'
import format from 'date-fns/format'
import { gql, useMutation } from '@apollo/client'

import styles from '../styles/Home.module.css'

const REGISTER_ACCOUNT = gql`
  mutation CreateAccount ($data: CreateAccountInput!) {
    createAccount(input: $data) {
      username
      name
      dateCreated
    }
  }
`

const RegisterPage = () => {
  const [registerAccount, { data, error, loading }] = useMutation(REGISTER_ACCOUNT)

  const handleSubmit = async (e) => {
    e.preventDefault()
    const formData = new FormData(e.target)

    const form = Object.fromEntries(formData);
    const variables = { data: { ...form } }

    registerAccount({ variables })
  }


  if (loading) return <p>Loading...</p>
  if (error) return <p>Error :(</p>

  return(
    <div className={styles.container}>
      <Head>
        <title>Pet library</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>Register Page</h1>

        {
          data ? (
            <>
              <p>Account created successfully {data?.createAccount.name}</p>
              <p>Fecha: {format(new Date(data?.createAccount.dateCreated), 'MMMM d, yyyy hh:mm aaaa')}</p>
            </>
          ) : (
            <form onSubmit={handleSubmit}>
              <label htmlFor="name">name
                <input type="text" name="name" required placeholder='TYPE HERE'/>
              </label>
              <br />
              <label htmlFor="username">username
                <input type="text" name="username" required placeholder='TYPE HERE'/>
              </label>
              <br />
              <label htmlFor="password">password
                <input type="password" name="password" required placeholder='TYPE HERE'/>
              </label>
              <br />
              <button>
                login
              </button>
            </form>
          )
        }
      </main>
    </div>
  )
}

export default RegisterPage
